# Reference: https://github.com/anna-geller/dataflow-ops/blob/main/.github/workflows/ecs_prefect_agent.yml#L137

name: Prefect Step 2 - Deploy Flows to registered Prefect agents

on:
  workflow_dispatch:
    inputs:
      s3_path:
        description: S3 path in the format bucket/path
        required: true
        default: mlops-zoomcamp-capstone-artifacts/prefect-artifacts/deployments
      s3_block_name:
        description: Name of the S3 block
        required: true
        default: deployments
  # push:
  #   paths:
  #     - workflow_orchestration/flows/*
  #   branches:
  #     - main
env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: prefect-agent
  DOCKER_PATH: ./workflow_orchestration/
  ECS_CLUSTER: mlops-zoomcamp-capstone
  SERVICE_NAME: prefect-agent
  PREFECT_VERSION: 2.1.1

jobs:
  blocks:
    name: Create blocks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Python dependencies
        run: |
          pip install prefect==$PREFECT_VERSION
          pip install s3fs

      - name: Prefect Cloud login
        run: |
          prefect config set PREFECT_API_KEY=${{ secrets.PREFECT_API_KEY}}
          prefect config set PREFECT_API_URL=${{ secrets.PREFECT_API_URL}}

      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build S3 block
        id: s3
        run: |
          cat <<EOF > s3_block.py
          from prefect.filesystems import S3
          s3 = S3(bucket_path="${{ github.event.inputs.s3_path }}", aws_access_key_id="${{ secrets.AWS_ACCESS_KEY_ID }}", aws_secret_access_key="${{ secrets.AWS_SECRET_ACCESS_KEY }}")
          s3.save("${{ github.event.inputs.s3_block_name }}", overwrite=True)
          EOF
          python s3_block.py
      - name: Blocks creation finished
        run: echo "S3 storage block built at $(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_STEP_SUMMARY

  list-flows:
    runs-on: ubuntu-latest
    needs: blocks
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: set-matrix
        working-directory: workflow_orchestration
        run: echo "::set-output name=matrix::$(ls flows/*.py | jq -R -s -c 'split("\n")[:-1]')"

  deploy:
    needs: list-flows
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flows: ${{ fromJson(needs.list-flows.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH=$PATH:$HOME/.local/bin
          poetry --version

      - name: Add poetry to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Python dependencies
        working-directory: workflow_orchestration
        run: |
          poetry install --only main
          source ./.venv/bin/activate
          prefect --help

      - name: Prefect Cloud login
        working-directory: workflow_orchestration
        run: |
          poetry run prefect config set PREFECT_API_KEY=${{ secrets.PREFECT_API_KEY}}
          poetry run prefect config set PREFECT_API_URL=${{ secrets.PREFECT_API_URL}}

      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy flows to S3
        working-directory: workflow_orchestration
        id: build
        run: |
          FLOW_NAME=$(basename ${{ matrix.flows }} .py)
          poetry run prefect deployment build ${{ matrix.flows }}:$FLOW_NAME \
            --name cicd \
            --work-queue ${{ env.SERVICE_NAME }} \
            --storage-block "s3/${{ github.event.inputs.s3_block_name }}" \
            --version $GITHUB_SHA \
            --override "env.AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}, env.AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}, AWS_DEFAULT_REGION=${{ env.AWS_REGION }}"
            -output $FLOW_NAME.yaml
        # run: |
        #   FLOW_NAME=$(basename ${{ matrix.flows }} .py)
        #   poetry run prefect deployment build ${{ matrix.flows }}:$FLOW_NAME --name cicd -q ${{ env.SERVICE_NAME }} -sb s3/deployments -v $GITHUB_SHA -o $FLOW_NAME.yaml
        #   echo "poetry run prefect deployment build ${{ matrix.flows }}:$FLOW_NAME --name cicd -q ${{ env.SERVICE_NAME }} -sb s3/deployments -v $GITHUB_SHA -o $FLOW_NAME.yaml"
        #   poetry run prefect deployment apply $FLOW_NAME.yaml
        #   # poetry run prefect deployment build flows/datalake_flow.py:datalake_flow --name cicd -q prefect-agent -sb s3/deployments -v 973aed7 -o datalake_flow.yaml
        #   # poetry run prefect deployment apply datalake_flow.yaml
        #   # poetry run prefect deployment build flows/model_flow.py:model_flow --name cicd -q prefect-agent -sb s3/deployments -v 973aed7 -o model_flow.yaml
        #   # poetry run prefect deployment apply model_flow.yaml
        #   # echo ::set-output name=flow_manifest::$FLOW_NAME.yaml

      - name: Upload task definition as artifact
        uses: actions/upload-artifact@v3
        with:
          name: Deployment YAML manifests
          path: ${{ steps.build.outputs.flow_manifest }}
