name: Build & Deploy to Amazon ECR and Amazon ECS

on:
  workflow_dispatch:
    inputs:
      ecr_repository:
        description: ECR repository name for the service image (aligned with service name)
        required: true
        default: 'fastapi-app'
        type: choice
        options: ['fastapi-app', 'mlflow-server']
      docker_path:
        description: Relative path to corresponding Dockerfile for the service
        required: true
        default: './model_serving/web_service/'
        type: choice
        options: ['./model_serving/web_service/', './experiment_tracking/']
env:
  AWS_REGION: eu-central-1

jobs:
  deploy:
    name: Build & Push AWS ECR
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.inputs.ecr_repository }}
          DOCKER_PATH: ${{ github.event.inputs.docker_path }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.

          # Build image and push image to ECR with latest tag
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY $DOCKER_PATH
          docker push $ECR_REGISTRY/$ECR_REPOSITORY

          # Tag image with the Git-Sha and Push again
          docker tag  $ECR_REGISTRY/$ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"