version: "0.1"
services:
  # db1:
  #     restart: always
  #     image: postgres:12
  #     container_name: mlflow_backend_store1
  #     expose:
  #       - "{PG_PORT}"
  #     networks:
  #       - backend
  #     environment:
  #       - POSTGRES_USER=${PG_USER}
  #       - POSTGRES_PASSWORD=${PG_PASSWORD}
  #       - POSTGRES_DATABASE=${PG_DATABASE}
  #     volumes:
  #         - db_data1:/var/lib/postgresql/data/
  db:
      restart: always
      image: mysql/mysql-server:5.7.28
      container_name: mlflow_db
      expose:
          - "{MYSQL_PORT}"
      networks:
          - backend
      environment:
          - MYSQL_DATABASE=${MYSQL_DATABASE}
          - MYSQL_USER=${MYSQL_USER}
          - MYSQL_PASSWORD=${MYSQL_PASSWORD}
          - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      volumes:
          - db_data2:/var/lib/mysql
  s3:
    image: minio/minio:RELEASE.2022-10-02T19-29-29Z
    volumes:
      - minio_data:/data
    ports:
      - "${MINIO_PORT}:9000"
    networks:
      - frontend
      - backend
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_ACCESS_KEY}
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  create_buckets:
    image: minio/mc:RELEASE.2022-10-01T07-56-14Z
    depends_on:
      - s3
    networks:
      - backend
    entrypoint: >
      /bin/sh -c '
      sleep 5;
      /usr/bin/mc config host add s3 http://s3:${MINIO_PORT} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_ACCESS_KEY} --api S3v4;
      [[ ! -z "`/usr/bin/mc ls s3 | grep challenge`" ]] || /usr/bin/mc mb s3/${MLFLOW_BUCKET_NAME};
      /usr/bin/mc policy download s3/${MLFLOW_BUCKET_NAME};
      exit 0;
      '    
  
  mlflow:
    build: ./experiment_tracking/
    container_name: mlflow_server
    networks:
      - frontend
      - backend
    ports:
      - "${MLFLOW_PORT}:5000"
    command: >
      mlflow server 
      --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:${MYSQL_PORT}/${MYSQL_DATABASE}
      --host 0.0.0.0
      --default-artifact-root s3://${MLFLOW_BUCKET_NAME}/

  prefect:
    build: ./workflow_orchestration
    env_file:
      - ./workflow_orchestration/.env
  fastapi:
    build: ./model_serving/web_service/
    env_file:
      - ./model_serving/web_service/.env
    ports: 
      - "8000:8000"
  
volumes:
  db_data1:
  db_data2:
  minio_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

